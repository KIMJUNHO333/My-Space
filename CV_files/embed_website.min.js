!(function () {
  const e = "data-sk-manual-edit",
    t = "data-sk-ai-edit";
  function n(e) {
    if (!e) return "";
    if (e.id) return `//*[@id="${e.id}"]`;
    if (e === document.body) return "/html/body";
    let t = "",
      n = e;
    for (; n && n !== document.body; ) {
      let e = 1,
        o = n.previousElementSibling;
      for (; o; ) o.tagName === n.tagName && e++, (o = o.previousElementSibling);
      (t = `/${n.tagName.toLowerCase()}[${e}]${t}`), (n = n.parentElement);
    }
    return `/html/body${t}`;
  }
  function o(e) {
    const t = {
      iframeId: (window.frameElement && window.frameElement.getAttribute("data-index")) || "0",
      uuid: (window.frameElement && window.frameElement.getAttribute("data-uuid")) || "",
    };
    Object.assign(e, t), window.parent.postMessage(e, "*");
  }
  function a(e) {
    if (!e) return null;
    try {
      const t = e.getAttribute("data-lov-id") || "",
        n = t.split(":"),
        o = t,
        a = n.length >= 2 ? parseInt(n[1]) : null,
        i = n.length >= 3 ? parseInt(n[2]) : null,
        l = e.getAttribute("data-component-path") || "",
        r = e.getAttribute("data-component-file") || "",
        s = {};
      Array.from(e.attributes).forEach((e) => {
        e.name.startsWith("data-") || (s[e.name] = e.value);
      });
      const d = e.className || "";
      let c = {};
      try {
        const t = e.getAttribute("data-component-content");
        t && (c = JSON.parse(decodeURIComponent(t)));
      } catch (e) {
        console.warn("解析data-component-content失败:", e);
      }
      const u = e.textContent || "",
        m = e.tagName.toLowerCase(),
        p = [];
      return (
        Array.from(e.children).forEach((e) => {
          p.push({
            tagName: e.tagName.toLowerCase(),
            className: e.className || "",
            textContent: e.textContent || "",
            id: e.id || "",
          });
        }),
        {
          dom_id: o,
          file_path: l,
          file_name: r,
          attrs: s,
          children: p,
          class_name: d,
          content: c,
          text_content: u,
          element_type: m,
          line_number: a,
          col_number: i,
        }
      );
    } catch (e) {
      return console.warn("解析DOM信息失败:", e), null;
    }
  }
  (window.MANUAL_EDIT_ATTR = e),
    (window.AI_EDIT_ATTR = t),
    (window.__sk_editor = {
      debounce: (e, t) => {
        let n;
        return function (...o) {
          n && clearTimeout(n),
            (n = setTimeout(() => {
              e.apply(this, o), (n = null);
            }, t));
        };
      },
      getXPath: n,
      postMessageToParent: o,
      updateElementPosition: function (e, t) {
        if (!e) return;
        const i = n(e),
          l = (function (e, t) {
            if (!e) return -1;
            const n = document.documentElement.outerHTML,
              o = e.trim();
            if (t && "string" == typeof t && "function" == typeof document.evaluate)
              try {
                const e = document.evaluate(
                  t,
                  document,
                  null,
                  XPathResult.FIRST_ORDERED_NODE_TYPE,
                  null
                ).singleNodeValue;
                if (e && e.nodeType === Node.ELEMENT_NODE && e instanceof Element) {
                  const t = e.outerHTML.trim();
                  let o = -1,
                    a = 0;
                  for (; -1 !== (o = n.indexOf(t, o + 1)); )
                    if ((a++, n.slice(o, o + t.length) === t && e.outerHTML.trim() === t)) return a;
                }
              } catch (e) {}
            let a = -1,
              i = 0;
            for (; -1 !== (a = n.indexOf(o, a + 1)); ) i++;
            return i > 0 ? i : -1;
          })(e.outerHTML, i),
          r =
            "IMG" === e.tagName && "FIGCAPTION" === e.nextElementSibling?.tagName ? e.nextElementSibling.innerText : "",
          s = window.getComputedStyle(e),
          d = {
            heading: e.tagName.toLowerCase(),
            fontFamily: s.fontFamily,
            fontSize: s.fontSize,
            fontWeight: s.fontWeight,
            fontStyle: s.fontStyle,
            textDecoration: s.textDecoration,
            textAlign: s.textAlign,
            color: s.color,
            backgroundColor: s.backgroundColor,
            letterSpacing: s.letterSpacing,
            lineHeight: s.lineHeight,
            marginTop: s.marginTop,
            marginRight: s.marginRight,
            marginBottom: s.marginBottom,
            marginLeft: s.marginLeft,
            paddingTop: s.paddingTop,
            paddingRight: s.paddingRight,
            paddingBottom: s.paddingBottom,
            paddingLeft: s.paddingLeft,
            borderRadius: s.borderRadius,
          },
          c = a(e);
        o({
          type: "ELEMENT_SELECT",
          payload: {
            tagName: e.tagName,
            id: e.id || "",
            className: e.className || "",
            innerText: e.innerText,
            outerHTML: e.outerHTML,
            xPath: i,
            focusType: t,
            attributes: Array.from(e.attributes).reduce((e, t) => ((e[t.name] = t.value), e), {}),
            content: JSON.parse(decodeURIComponent(e.getAttribute("data-component-content") || "{}")),
            styles: Array.from(e.style).reduce((t, n) => ((t[n] = e.style[n]), t), {}),
            computedStyles: d,
            rect: {
              left: e.getBoundingClientRect().left,
              top: e.getBoundingClientRect().top,
              width: e.offsetWidth,
              height: e.offsetHeight,
            },
            matchIndex: l,
            figcaption: r,
            domInfo: c,
          },
        });
      },
      getModifiedType: function () {
        return document.body.hasAttribute(t) ? "ai" : document.body.hasAttribute(e) ? "manual" : "none";
      },
      parseDomInfo: a,
    });
})(),
  (function () {
    let e = null,
      t = null,
      n = null,
      o = null,
      a = !1,
      i = null,
      l = null,
      r = null;
    const s = ["p", "h1", "h2", "h3", "h4", "h5", "h6", "span", "a"];
    function d() {
      const e = document.createElement("div");
      (e.id = "highlightBox-tools"),
        Object.assign(e.style, {
          position: "absolute",
          pointerEvents: "none",
          border: "2px solid #00EBBE",
          zIndex: "9999",
          boxSizing: "border-box",
          display: "none",
        });
      const t = window.frameElement,
        n = ["gen_ppt"].includes((t && t.getAttribute("data-type")) || "");
      (e.innerHTML = n
        ? '\n          <div style="position:absolute;top:0px;left:50%;transform:translate(-50%,-50%);z-index:10000;pointer-events:auto;">\n            <div id="drag-btn" style="width:26px;height:16px;border-radius:6px;display:flex;align-items:center;justify-content:center;box-shadow:0 2px 8px rgba(0,0,0,0.15);cursor:grab;transition:box-shadow 0.2s;pointer-events:auto;">\n              <svg width="27" height="16" viewBox="0 0 27 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n                <rect x="1.5" y="1" width="24" height="14" rx="5" fill="#00EBBE"/>\n                <rect x="1.5" y="1" width="24" height="14" rx="5" stroke="white" stroke-width="2"/>\n                <path d="M18.5 7.00001L18.6016 7.00489C19.106 7.05576 19.4998 7.48211 19.5 8.00001C19.5 8.51765 19.1067 8.94379 18.6025 8.99513L18.5 9.00001H8.4961C7.94391 8.9977 7.49785 8.54826 7.50001 7.9961C7.50232 7.44391 7.95176 6.99785 8.50391 7.00001H18.5Z" fill="white"/>\n              </svg>\n            </div>\n          </div>\n          <div class="tagname-label" style="position:absolute;top:-2px;left:-2px;transform:translateY(-100%);background:#00EBBE;color:white;font-size:12px;padding:2px 6px;border-radius:6px 6px 0 0;font-family:Arial,sans-serif;line-height:1;white-space:nowrap;"></div>\n        '
        : '\n          <div class="tagname-label" style="position:absolute;top:-2px;left:-2px;transform:translateY(-100%);background:#00EBBE;color:white;font-size:12px;padding:2px 6px;border-radius:6px 6px 0 0;font-family:Arial,sans-serif;line-height:1;white-space:nowrap;"></div>\n        '),
        document.body.appendChild(e);
      const o = document.createElement("div");
      (o.id = "hoverBox-tools"),
        Object.assign(o.style, {
          position: "absolute",
          pointerEvents: "none",
          border: "2px dashed #00EBBE",
          zIndex: "9998",
          boxSizing: "border-box",
          display: "none",
        }),
        (o.innerHTML =
          '\n        <div class="tagname-label" style="position:absolute;top:-2px;left:-2px;transform:translateY(-100%);background:#00EBBE;color:white;font-size:12px;padding:2px 6px;border-radius:6px 6px 0 0;font-family:Arial,sans-serif;line-height:1;white-space:nowrap;"></div>\n      '),
        document.body.appendChild(o);
    }
    function c(e, t, n, o = {}) {
      const a = function (e) {
        if (!e.target.closest) return;
        const o = e.target.closest(t);
        o && n.call(o, e, o);
      };
      return (
        document.addEventListener(e, a, o),
        function () {
          document.removeEventListener(e, a, o);
        }
      );
    }
    function u(e) {
      for (; e; ) {
        if ("svg" === e.nodeName) return e;
        e = e.parentElement;
      }
      return null;
    }
    function m(e) {
      return e.hasAttribute("data-sk-deleted");
    }
    function p(n, o) {
      let a = n;
      if (!a) {
        const e = window.getSelection();
        if (!e || !e.rangeCount) return;
        const t = e.getRangeAt(0);
        if (!t) return;
        (a = t.commonAncestorContainer), a.nodeType === Node.TEXT_NODE && (a = a.parentElement);
      }
      if (
        !f(a) &&
        (function (e, t) {
          return !(!e || !t) && e.outerHTML === t.outerHTML;
        })(a, o) &&
        !m(a)
      )
        return;
      if (
        (document.body.hasAttribute(MANUAL_EDIT_ATTR) || document.body.setAttribute(MANUAL_EDIT_ATTR, "true"), !m(a))
      ) {
        if (a.hasAttribute("data-sk-edited")) return;
        a.setAttribute("data-sk-edited", ""), console.log("已编辑", a);
      }
      const i = [],
        l = ["BODY", "DIV", "LI", "P"];
      !(function e(t) {
        if (!t) return;
        const n = t.nodeName.toUpperCase();
        if (l.indexOf(n) > -1) {
          t.querySelectorAll(".sk-source-tag[data-sk-source-id]").forEach((e) => {
            i.indexOf(e) > -1 && e.setAttribute("data-sk-source-delete", "");
          });
        } else
          i.push(
            ...(function (e) {
              const t = [];
              let n = e.nextElementSibling;
              for (; n; ) t.push(n), (n = n.nextElementSibling);
              return t;
            })(t)
          ),
            e(t.parentElement);
      })(a),
        m(a) &&
          (a.parentElement.removeChild(a),
          (e = null),
          (t = null),
          b(),
          setTimeout(() => {
            M();
          }, 100));
    }
    function f(e, t) {
      return t && console.log("click el", e), !!u(e) || (e && "IMG" === e.tagName);
    }
    window.addEventListener("load", function () {
      d(), I();
    }),
      window.addEventListener("load", function () {
        if (!document.querySelector("#sk-table-padding-style")) {
          const e = document.createElement("style");
          (e.id = "sk-table-padding-style"),
            (e.textContent =
              "\n        .sk-table-selectable {\n          padding-bottom: 8px !important;\n          border-collapse: separate;\n        }\n      "),
            document.head.appendChild(e);
        }
        document.querySelectorAll("table:not(.sk-table-selectable)").forEach((e) => {
          e.classList.add("sk-table-selectable");
        });
      });
    const g = ((e, t) => {
      let n = 0;
      return function (...o) {
        const a = Date.now();
        a - n >= t && ((n = a), e.apply(this, o));
      };
    })((e) => {
      window.__sk_editor.postMessageToParent({
        type: "DRAG_MOVE",
        payload: {
          currentPosition: { x: e.clientX, y: e.clientY },
          offset: { x: e.clientX - v.x, y: e.clientY - v.y },
        },
      });
    }, 16);
    function E(e, t = !1) {
      const n = e.target;
      if (!n) return null;
      if ("BODY" === n.tagName || "HTML" === n.tagName || (n.parentElement && "BODY" === n.parentElement.tagName))
        return null;
      const o = getComputedStyle(n).display;
      if ("block" === o || "flex" === o || "table" === o) {
        if (f(n, t)) {
          const e = u(n);
          return e || n;
        }
        return n;
      }
      if (
        (function (e) {
          const t = ["SECTION"];
          for (; e; ) {
            if (!t.includes(e.tagName) && e.getAttribute("id")) return !0;
            e = e.parentElement;
          }
          return !1;
        })(n)
      )
        return null;
      if (f(n, t)) {
        const e = u(n);
        return e || n;
      }
      let a;
      if (document.caretRangeFromPoint) a = document.caretRangeFromPoint(e.clientX, e.clientY);
      else if (document.caretPositionFromPoint) {
        const t = document.caretPositionFromPoint(e.clientX, e.clientY);
        t && (a = { startContainer: t.offsetNode, startOffset: t.offset });
      }
      if (a && a.startContainer && a.startContainer.nodeType === Node.TEXT_NODE) {
        const e = a.startContainer.parentElement;
        return e || null;
      }
      return null;
    }
    function y(e, t) {
      if (!e || !t || (!a && ((!f(t) && "CANVAS" !== t.tagName) || "hoverBox-tools" === e.getAttribute("id")))) return;
      const n = f(t) ? 8 : 4,
        o = f(t) ? 8 : 2,
        i = t.getBoundingClientRect();
      Object.assign(e.style, {
        left: window.scrollX + i.left - n + "px",
        top: window.scrollY + i.top - o + "px",
        width: i.width + 2 * n + "px",
        height: i.height + 2 * o + "px",
        display: "block",
      });
      const l = e.querySelector(".tagname-label");
      l && t && (l.textContent = t.tagName.toLowerCase());
    }
    function h() {
      let e = document.documentElement.outerHTML;
      n = e.replace(
        /class\s*=\s*["']([^"']*)["']/gi,
        (e, t) =>
          `class="${t
            .split(/\s+/)
            .filter((e) => e && "sk-edit-loading" !== e)
            .join(" ")}"`
      );
    }
    function w(e = null) {
      i = e;
    }
    function _() {
      if (!r) return;
      const e = r;
      e.removeAttribute("contenteditable"),
        (e.style.outline = ""),
        (e.style.outlineOffset = ""),
        (e.style.backgroundColor = ""),
        e.blur(),
        window.getSelection && window.getSelection().removeAllRanges(),
        (r = null);
    }
    function b(n = !1) {
      _(), e && (p(e, t), (e.style.outline = ""), (e = null), (t = null));
      const o = document.getElementById("highlightBox-tools");
      o && (o.style.display = "none"),
        n || window.__sk_editor.postMessageToParent({ type: "ELEMENT_SELECT", payload: null });
    }
    function T(e) {
      if (!e) return;
      y(document.getElementById("highlightBox-tools"), e), window.__sk_editor.updateElementPosition(e, "click");
    }
    let x = !1,
      N = null,
      v = { x: 0, y: 0 };
    function L(t) {
      e &&
        ((x = !0),
        (N = e),
        (v = { x: t.clientX, y: t.clientY }),
        (window.__sk_dragStartTime = Date.now()),
        (document.body.style.userSelect = "none"),
        (t.target.style.cursor = "grabbing"),
        window.__sk_editor.postMessageToParent({
          type: "DRAG_START",
          payload: {
            element: { tagName: N.tagName, id: N.id || "", className: N.className || "", xPath: R(N) },
            startPosition: { x: t.clientX, y: t.clientY },
          },
        }),
        t.stopPropagation(),
        t.preventDefault());
    }
    setTimeout(() => {
      c("mousedown", "#drag-btn", L),
        c("mouseenter", "#drag-btn", () => {
          const e = document.getElementById("drag-btn");
          e && (e.style.cursor = "grab");
        }),
        c("mouseleave", "#drag-btn", () => {
          const e = document.getElementById("drag-btn");
          e && (e.style.cursor = "grab");
        });
    }, 0),
      document.addEventListener("mousemove", function (e) {
        if (!x || !N) return;
        !(function (e, t, n) {
          if (!e || !t || !a) return;
          const o = t.getBoundingClientRect(),
            { clientX: i, clientY: l } = n;
          Object.assign(e.style, {
            left: window.scrollX + i - o.width / 2 - 4 + "px",
            top: window.scrollY + l - 2 + "px",
            width: o.width + 8 + "px",
            height: o.height + 4 + "px",
            display: "block",
          });
          const r = e.querySelector(".tagname-label");
          r && t && (r.textContent = t.tagName.toLowerCase());
        })(document.getElementById("hoverBox-tools"), N, e),
          g(e),
          e.preventDefault();
      }),
      document.addEventListener("mouseup", function (e) {
        if (!x || !N) return;
        setTimeout(() => {
          x = !1;
        }, 10),
          (document.body.style.userSelect = "");
        const t = document.getElementById("drag-btn");
        t && (t.style.cursor = "grab");
        const n = e.clientX - v.x,
          o = e.clientY - v.y;
        let a = N.style.transform || "",
          i = a.match(/translate\(([-\d.]+)px,\s*([-\d.]+)px\)/),
          l = 0,
          r = 0;
        i &&
          ((l = parseFloat(i[1])),
          (r = parseFloat(i[2])),
          (a = a.replace(/translate\(([-\d.]+)px,\s*([-\d.]+)px\)/, "")));
        const s = l + n,
          d = r + o;
        (N.style.transform = `${a} translate(${s}px, ${d}px)`),
          (N.style.animation = "unset"),
          (N.style.transition = "unset");
        const c = document.getElementById("hoverBox-tools");
        c && (c.style.display = "none"),
          T(N),
          window.__sk_editor.postMessageToParent({
            type: "DRAG_END",
            payload: {
              element: { tagName: N.tagName, id: N.id || "", className: N.className || "", xPath: R(N) },
              startPosition: v,
              endPosition: { x: e.clientX, y: e.clientY },
              totalOffset: { x: n, y: o },
              duration: Date.now() - (window.__sk_dragStartTime || Date.now()),
            },
          }),
          (N = null),
          delete window.__sk_dragStartTime,
          document.body.hasAttribute(MANUAL_EDIT_ATTR) || document.body.setAttribute(MANUAL_EDIT_ATTR, "true"),
          k();
      }),
      document.addEventListener("mousemove", function (t) {
        if ((x && N) || !a) return;
        const n = t.target,
          o = E(t),
          i = document.getElementById("highlightBox-tools"),
          l = document.getElementById("hoverBox-tools");
        !o ||
        (n !== o && "svg" !== o.nodeName) ||
        o === i ||
        o === l ||
        o === e ||
        o.hasAttribute("data-sk-reference-id")
          ? l && (l.style.display = "none")
          : y(l, o);
      }),
      document.addEventListener("mouseleave", function (e) {
        if (x) return;
        console.log("mouseleave");
        const t = document.getElementById("hoverBox-tools");
        t && (t.style.display = "none");
      }),
      document.addEventListener(
        "click",
        function (n) {
          if (x || !a) return !1;
          n.preventDefault(), n.stopPropagation();
          const o = n.target,
            i = E(n, !0),
            d = document.getElementById("highlightBox-tools"),
            c = document.getElementById("hoverBox-tools");
          if (!i || i === d || i === c || (o !== i && "svg" !== i.nodeName) || i.hasAttribute("data-sk-reference-id"))
            return;
          if (!a && !f(o) && "CANVAS" !== o.tagName) return void b(!0);
          const u = l === i;
          l = i;
          const m = s.includes(i.tagName.toLowerCase());
          if (u && m)
            return (function (e) {
              if (!e) return !1;
              try {
                const t = window.__sk_editor.parseDomInfo(e);
                return !!(t && t.content && t.content.text);
              } catch (e) {
                return console.warn("判断元素可编辑性失败:", e), !1;
              }
            })(i)
              ? void (function (e) {
                  if (e && r !== e) {
                    if (
                      (_(),
                      (r = e),
                      e.setAttribute("contenteditable", "true"),
                      (e.style.outline = "2px solid #00EBBE"),
                      (e.style.outlineOffset = "2px"),
                      (e.style.backgroundColor = "rgba(0, 235, 190, 0.1)"),
                      e.focus(),
                      window.getSelection)
                    ) {
                      const t = window.getSelection(),
                        n = document.createRange();
                      n.selectNodeContents(e), t.removeAllRanges(), t.addRange(n);
                    }
                    console.log("进入文本编辑态:", e),
                      window.__sk_editor.postMessageToParent({
                        type: "TEXT_EDIT_MODE_ENTER",
                        payload: {
                          tagName: e.tagName,
                          id: e.id || "",
                          className: e.className || "",
                          xPath: R(e),
                          domInfo: window.__sk_editor.parseDomInfo(e),
                        },
                      });
                  }
                })(i)
              : void window.__sk_editor.postMessageToParent({
                  type: "TEXT_EDIT_DISABLED",
                  payload: {
                    tagName: i.tagName,
                    id: i.id || "",
                    className: i.className || "",
                    xPath: R(i),
                    message: "该元素不支持文本编辑",
                  },
                });
          const p = e === i;
          e && e !== i && (e.style.outline = ""),
            p || ((e = i), (t = i.cloneNode(!0))),
            c && (c.style.display = "none"),
            window.__sk_editor.postMessageToParent({
              type: "DRAG_HANDLER_SHOW",
              payload: {
                element: { tagName: i.tagName, id: i.id || "", className: i.className || "", xPath: R(i) },
                draggHandler: document.getElementById("highlightBox-tools")?.innerHTML?.includes("drag-btn"),
              },
            }),
            setTimeout(() => {
              T(i);
            }, 200);
        },
        !0
      ),
      document.addEventListener("mousedown", function (t) {
        const n = document.getElementById("highlightBox-tools"),
          o = t.target instanceof Node ? t.target : null;
        r && o !== r && _(), o !== e && n && !n.contains(o) && b();
      });
    const A = window.__sk_editor.debounce(function (t) {
      y(document.getElementById("highlightBox-tools"), e);
      const n = window.__sk_editor.parseDomInfo(e);
      if (!n) return;
      w({
        type: "editText",
        path: n.file_path,
        line: n.line_number,
        componentName: n.element_type,
        newText: n.text_content,
      }),
        k();
    }, 300);
    function D(e) {
      const t = window.getSelection();
      if (!t || !t.rangeCount) return;
      const n = t.getRangeAt(0);
      n.deleteContents(),
        n.insertNode(document.createTextNode(e)),
        n.collapse(!1),
        t && (t.removeAllRanges(), t.addRange(n));
    }
    function R(e) {
      if (!e) return "";
      if (e.id) return `//*[@id="${e.id}"]`;
      if (e === document.body) return "/html/body";
      let t = "",
        n = e;
      for (; n && n !== document.body; ) {
        let e = 1,
          o = n.previousElementSibling;
        for (; o; ) o.tagName === n.tagName && e++, (o = o.previousElementSibling);
        (t = `/${n.tagName.toLowerCase()}[${e}]${t}`), (n = n.parentElement);
      }
      return `/html/body${t}`;
    }
    function k(o, a = !1) {
      window.__sk_editor.postMessageToParent({
        type: "ELEMENT_UPDATED",
        payload: { html: n, immediate: !0, action: i },
      }),
        o || p(e, t),
        a || T(e),
        setTimeout(() => {
          h(), window.__sk_editor.postMessageToParent({ type: "ELEMENT_UPDATED", payload: { html: n, action: i } });
        }, 300);
    }
    function M() {
      const e = ["highlightBox-tools", "hoverBox-tools"],
        t = Array.from(document.body.children).filter((t) => !e.includes(t.id)),
        n = t.some((e) => {
          if (e.nodeType === Node.ELEMENT_NODE) {
            if ("P" === e.tagName) {
              const t = Array.from(e.childNodes),
                n = 1 === t.length && t[0].nodeType === Node.ELEMENT_NODE && "BR" === t[0].tagName,
                o = 0 === t.length || (1 === t.length && !t[0].textContent?.trim());
              if (n || o) return !1;
            }
            const t = e.textContent?.trim();
            return t && t.length > 0;
          }
          return !1;
        }),
        o = Array.from(document.body.childNodes).filter((e) => e.nodeType === Node.TEXT_NODE && e.textContent?.trim());
      if (!n && 0 === o.length && 0 === t.length) {
        const e = document.createElement("div");
        e.classList.add("container");
        const t = document.createElement("p");
        (t.textContent = "Enter content here"), e.appendChild(t), document.body.appendChild(e);
      }
    }
    document.addEventListener("input", A),
      document.addEventListener("paste", function (t) {
        if (!e) return;
        const n = t.clipboardData;
        if (!n) return;
        const o = n.items || [];
        for (let e = 0; e < o.length; e++) {
          const n = o[e];
          if ("string" === n.kind && "text/plain" === n.type)
            return (
              t.preventDefault(),
              void n.getAsString(function (e) {
                D(e);
              })
            );
          if ("file" === n.kind && n.type.startsWith("image/"))
            return t.preventDefault(), void console.log("图片已被过滤");
        }
        t.preventDefault();
        D(n.getData("text/plain")), k();
      }),
      window.addEventListener(
        "scroll",
        function () {
          if (e) {
            y(document.getElementById("highlightBox-tools"), e);
          }
        },
        !0
      ),
      (window.onblur = () => {
        console.log("iframe onblur"),
          (o = setTimeout(() => {
            b(), console.log("iframe onblur clearEditing");
          }, 800));
      }),
      window.addEventListener("load", function () {
        setTimeout(() => {
          h();
        }, 1e3);
      }),
      window.addEventListener("resize", function () {
        T(e);
      });
    let P = null;
    function I() {
      P && (P.disconnect(), (P = null)),
        (P = new MutationObserver((e) => {
          let t = !1;
          e.forEach((e) => {
            "childList" === e.type && (t = !0), "characterData" === e.type && (t = !0);
          }),
            t &&
              setTimeout(() => {
                M();
              }, 100);
        })),
        P.observe(document.body, { childList: !0, subtree: !0, characterData: !0, characterDataOldValue: !0 }),
        setTimeout(() => {
          M();
        }, 500);
    }
    function B(e, t) {
      for (const n in t)
        if (Object.prototype.hasOwnProperty.call(t, n)) {
          if ("heading" === n) continue;
          if ("textDecoration" === n) {
            const n = t.textDecoration && t.textDecoration.trim();
            e.style.textDecoration = n && "__REMOVE_DECORATION__" !== n ? n : "none";
          } else e.style[n] = t[n];
        }
    }
    window.addEventListener("message", function (t) {
      if ("UPDATE_ELEMENT" === t.data.type)
        !(function (t) {
          const n = document.evaluate(
            t.xPath,
            document,
            null,
            XPathResult.FIRST_ORDERED_NODE_TYPE,
            null
          ).singleNodeValue;
          if (!(n && n instanceof Element)) return;
          if (
            (void 0 !== t.innerText &&
              (n instanceof HTMLElement ? (n.innerText = t.innerText) : (n.textContent = t.innerText)),
            t.attributes &&
              Object.keys(t.attributes).forEach((e) => {
                null === t.attributes[e] ? n.removeAttribute(e) : n.setAttribute(e, t.attributes[e]);
              }),
            t.styles && (n instanceof HTMLElement || n instanceof SVGElement))
          ) {
            const e = n.style;
            e &&
              Object.keys(t.styles).forEach((n) => {
                null === t.styles[n] ? e.removeProperty(n) : e.setProperty(n, t.styles[n]);
              });
          }
          if (t.replaceElement) {
            const o = document.createElement("div");
            o.innerHTML = t.replaceElement;
            const a = o.firstChild;
            a && (n.replaceWith(a), (e = a));
          }
          k(null === t.attributes?.["data-sk-edited"]);
        })(t.data.payload),
          w(t.data.payload?.action);
      else if ("DELETE_ELEMENT" === t.data.type)
        !(function (e) {
          const t = document.evaluate(
            e.xPath,
            document,
            null,
            XPathResult.FIRST_ORDERED_NODE_TYPE,
            null
          ).singleNodeValue;
          t && t instanceof Element && (t.setAttribute("data-sk-deleted", ""), k());
        })(t.data.payload),
          w(t.data.payload?.action);
      else if ("REPLACE_HTML" === t.data.type)
        (n = t.data.payload?.html),
          console.log("replaceHTML", n),
          (document.body.outerHTML = n),
          document.body.classList.add("sk-hide-tag"),
          d(),
          I(),
          b(),
          h(),
          setTimeout(() => {
            M();
            const e = new Event("resize");
            document.body.dispatchEvent(e);
          }, 200);
      else if ("APPLY_ELEMENT_STYLES" === t.data.type) {
        !(function (t, n) {
          if (!(t && t instanceof Element)) return;
          let o;
          n.heading && n.heading !== t.tagName.toLowerCase()
            ? ((o = document.createElement(n.heading)),
              (o.innerHTML = t.innerHTML),
              Array.from(t.attributes).forEach((e) => {
                o.setAttribute(e.name, e.value);
              }),
              B(o, n),
              t.parentNode && t.parentNode.replaceChild(o, t),
              (e = o))
            : (B(t, n), (o = t));
          k(), window.focus();
        })(
          document.evaluate(t.data.payload?.xPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null)
            .singleNodeValue,
          t.data.payload?.styles
        );
      } else if ("APPLY_ELEMENT_CLASSES" === t.data.type) {
        const e = document.evaluate(
          t.data.payload?.xPath,
          document,
          null,
          XPathResult.FIRST_ORDERED_NODE_TYPE,
          null
        ).singleNodeValue;
        e &&
          e instanceof Element &&
          (!(function (e, t, n) {
            if (!(e && e instanceof Element)) return;
            try {
              (e.className = t), k(), window.focus();
            } catch (e) {
              console.warn("applyClassesToElement error", e);
            }
          })(e, t.data.payload?.classes || [], t.data.payload),
          w(t.data.payload?.action));
      } else if ("ELEMENT_LOADING" === t.data.type) {
        const n = t.data.payload?.xPath;
        if (n) {
          const t = document.evaluate(n, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
          t && t instanceof Element && (t.classList.add("sk-edit-loading"), T(e));
        }
      } else if ("STOP_ELEMENT_LOADING" === t.data.type) {
        const n = t.data.payload?.xPath;
        if (n) {
          const t = document.evaluate(n, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
          t && t instanceof Element && (t.classList.remove("sk-edit-loading"), T(e));
        }
      } else if ("CLEAR_EDITING" === t.data.type) b(t.data.payload?.notPostMessage), clearTimeout(o);
      else if ("STOP_IFRAME_BLUR" === t.data.type) {
        null !== o && clearTimeout(o), console.log("STOP_IFRAME_BLUR");
        const e = window.frameElement;
        e && e instanceof HTMLIFrameElement && "function" == typeof e.focus && e.focus();
      } else if ("SET_EDIT_MODE" === t.data.type) {
        a = !!t.data.payload?.isEditMode;
        let e = document.getElementById("hoverBox-tools"),
          n = document.getElementById("highlightBox-tools");
        e && n && ((e.style.display = a ? "block" : "none"), (n.style.display = a ? "block" : "none")), b();
      } else if ("RELOAD" === t.data.type) window.location.reload();
      else if ("CALL_IFRAME_METHOD" === t.data.type) {
        const { methodName: e, args: n, requestId: o } = t.data.payload;
        let a = null,
          i = null;
        try {
          if (window.__sk_editor && "function" == typeof window.__sk_editor[e])
            a = window.__sk_editor[e].apply(window.__sk_editor, n || []);
          else {
            const t = window[e];
            if ("function" != typeof t) throw new Error(`Method '${e}' not found`);
            a = t.apply(window, n || []);
          }
        } catch (e) {
          i = e.message || String(e);
        }
        window.__sk_editor.postMessageToParent({
          type: "CALL_IFRAME_METHOD_RESPONSE",
          payload: { requestId: o, result: a, error: i },
        });
      }
      var n;
    }),
      window.addEventListener("keydown", function (e) {
        if (r)
          return "Escape" === e.key
            ? (e.preventDefault(), void _())
            : "Enter" !== e.key || e.shiftKey
              ? void 0
              : (e.preventDefault(), void _());
        (e.ctrlKey || e.metaKey) &&
          "z" === e.key &&
          (e.preventDefault(), window.__sk_editor.postMessageToParent({ type: "EDIT_UNDO" })),
          (e.ctrlKey || e.metaKey) &&
            ("y" === e.key || ("Z" === e.key && e.shiftKey)) &&
            (e.preventDefault(), window.__sk_editor.postMessageToParent({ type: "EDIT_REDO" }));
      });
  })();
